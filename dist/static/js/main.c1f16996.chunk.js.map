{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","href","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","presence","sessions","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.c1f16996.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/create'>New Project</NavLink></li>\r\n        <li><a href onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n      \r\n      firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email,\r\n        credentials.password\r\n      ).then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  \r\n    }\r\n  }\r\n  \r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res)=>{\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName : newUser.firstName,\r\n                lastName : newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = props => {\r\n    \r\n    return (\r\n        <div>\r\n            <ul className=\"right\">\r\n                <li><NavLink to=\"/signup\">Signup</NavLink></li>\r\n                <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n                \r\n            </ul>\r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default SignedOutLinks;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">TrungDuyADC</Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return{\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title \">{project.title}</span>\r\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      { projects && projects.map(project => {\r\n        return (\r\n          <Link to={'/project/'+project.id} key={project.id}>\r\n            <ProjectSummary project={project} key={project.id} />\r\n          </Link>\r\n        )\r\n      })}  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"online-users\">\r\n            { notifications && notifications.map(item =>{\r\n              return <li key={item.id}>\r\n                <span className=\"pink-text\">{item.user} </span>\r\n                <span>{item.content}</span>\r\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n              </li>\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport Notifications from './Notifications'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{\r\n    collection: 'projects',\r\n    orderBy:['createdAt','desc']\r\n  }]),\r\n  firestoreConnect([{\r\n    collection: 'notifications',\r\n    limit: 3,\r\n    orderBy:['time','desc']\r\n  }])\r\n)(Dashboard)","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {project, auth} = props;\r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n    if (project){\r\n        return(\r\n            <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n                <div className=\"card-action gret lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    console.log(state);\r\n    const {id} = ownProps.match.params;\r\n    const {projects} = state.firestore.data;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect(()=>['projects'])\r\n)(ProjectDetails)\r\n\r\n","  \r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to='/' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to='/' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> :  null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectAction';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state)\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const {auth} = this.props;\r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title' onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject : (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        // make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName : profile.firstName,\r\n            authorLastName : profile.lastName,\r\n            authorId ,\r\n            createdAt: new Date()\r\n        }).then(()=>{\r\n            dispatch({type:'CREATE_PROJECT', project})\r\n        }).catch((err)=>{\r\n            dispatch({type:'CREATE_PROJECT_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} /> \n          <Route path=\"/signin\" component={SignIn}/>\n          <Route path=\"/signup\" component={SignUp}/>\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n  }\r\n  \r\n  const authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n            ...state,\r\n            authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n            ...state,\r\n            authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n        return state\r\n    }\r\n  };\r\n  \r\n  export default authReducer;\r\n","const initState = {\r\n    projects: [\r\n      {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n      {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n      {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n  }\r\n  \r\n  const projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n      case 'CREATE_PROJECT':\r\n        console.log('craete project', action.project);\r\n        return state;\r\n      case 'CREATE_PROJECT_ERROR':\r\n        console.log('craete project error', action.err);\r\n        return state;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default projectReducer;","import {combineReducers} from 'redux';\r\nimport authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport  {firestoreReducer} from 'redux-firestore';\r\nimport { firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDxJcnYnSQhliQ-ctMouzKiztAtfcdf3_U\",\r\n    authDomain: \"manage-project-personal.firebaseapp.com\",\r\n    databaseURL: \"https://manage-project-personal.firebaseio.com\",\r\n    projectId: \"manage-project-personal\",\r\n    storageBucket: \"manage-project-personal.appspot.com\",\r\n    messagingSenderId: \"56706370913\",\r\n    appId: \"1:56706370913:web:e992f283d16547fe3a8920\",\r\n    measurementId: \"G-18MVB48MM0\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({timestampsInSnapshots: true})\r\n  // firebase.analytics();\r\n\r\nexport default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider,useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { isLoaded  } from 'react-redux-firebase';\nimport {reduxFirestore, getFirestore, createFirestoreInstance} from 'redux-firestore'\nimport { getFirebase, ReactReduxFirebaseProvider} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    // reactReduxFirebase(fbConfig), // redux binding for firebase\n    reduxFirestore(firebase,fbConfig) // redux bindings for firestore\n  )\n);\n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n}\nconst rrfProps = {\n  firebase,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  userProfile: 'users', // where profiles are stored in database\n  presence: 'presence', // where list of online users is stored in database\n  sessions: 'sessions'\n}\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n      return children\n}\n\nReactDOM.render(<Provider store={store}> \n                  <ReactReduxFirebaseProvider {...rrfProps}> \n                    <AuthIsLoaded>\n                      <App /> \n                    </AuthIsLoaded>\n                  </ReactReduxFirebaseProvider>\n                </Provider>, \n              document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}